---
name: Issue Labeler

on:
  issues:
    types: [opened, edited]

jobs:
  triage:
    name: Issue triage
    permissions:
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const title = context.payload.issue.title.toLowerCase();
          const body = context.payload.issue.body?.toLowerCase() || '';
          const labels = [];
          
          // Feature requests
          if (title.includes('feat') || title.includes('feature') || 
              body.includes('feat') || body.includes('feature')) {
            labels.push('feature');
          }
          
          // Bug reports
          if (title.includes('fix') || title.includes('bug') || 
              body.includes('fix') || body.includes('bug')) {
            labels.push('bug');
          }
          
          // Documentation
          if (title.includes('docs') || title.includes('documentation') || 
              body.includes('docs') || body.includes('documentation')) {
            labels.push('documentation');
          }
          
          // CI/CD
          if (title.includes('ci') || body.includes('ci')) {
            labels.push('ci');
          }
          
          // Architecture specific
          if (title.includes('aarch64') || body.includes('aarch64')) {
            labels.push('aarch64');
          }
          if (title.includes('aarch') || body.includes('aarch')) {
            labels.push('aarch64');
          }
          
          if (title.includes('loongarch64') || body.includes('loongarch64')) {
            labels.push('loongarch64');
          }
          if (title.includes('loongarch') || body.includes('loongarch')) {
            labels.push('loongarch64');
          }
        
          if (title.includes('riscv64') || body.includes('riscv64')) {
            labels.push('riscv64');
          }
          
          if (title.includes('x86_64') || body.includes('x86_64')) {
            labels.push('x86_64');
          }
          
          // Good first issue
          if (title.includes('good first issue') || body.includes('good first issue') ||
              title.includes('beginner') || body.includes('beginner') ||
              title.includes('starter') || body.includes('starter')) {
            labels.push('good first issue');
          }
          
          // Help wanted
          if (title.includes('help wanted') || body.includes('help wanted') ||
              title.includes('help') || body.includes('help') ||
              title.includes('help needed') || body.includes('help needed')) {
            labels.push('help wanted');
          }
          
          // Question
          if (title.includes('question') || body.includes('question') ||
              title.includes('how to') || body.includes('how to') ||
              title.includes('how do') || body.includes('how do')) {
            labels.push('question');
          }
          
          // Security
          if (title.includes('security') || body.includes('security') ||
              title.includes('vulnerability') || body.includes('vulnerability') ||
              title.includes('cve') || body.includes('cve')) {
            labels.push('security');
          }
              
          const issue_number = context.payload.issue?.number;

          console.log(`Issue title: ${title}`);
          console.log(`Computed labels: ${labels}`);

          if (issue_number && labels.length > 0) {
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              labels
            });
          }